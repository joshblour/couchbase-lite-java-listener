apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'eclipse'

sourceCompatibility = '1.6'

version = System.properties["MAVEN_UPLOAD_VERSION"] // https://github.com/couchbase/couchbase-lite-java-listener/issues/18
group = 'com.couchbase.lite'
archivesBaseName = 'couchbase-lite-java-listener'

repositories {
    mavenLocal()
    maven { url "http://thaliartifactory.cloudapp.net/artifactory/libs-snapshot" }
    maven { url "http://thaliartifactory.cloudapp.net/artifactory/libs-release" }
    maven { url 'http://files.couchbase.com/maven2/' }
    mavenCentral()
}

def buildListenerWithArtifacts = System.getProperty("buildListenerWithArtifacts")

dependencies {

    testCompile group: 'junit', name: 'junit', version: '4.11'

    compile 'com.couchbase.cblite:servlet:2-3'
    compile 'com.couchbase.cblite:webserver:2-3'

    compile buildListenerWithArtifacts == null ?
            project(':libraries:couchbase-lite-java-core') :
            'com.couchbase.lite:couchbase-lite-java-core:' + System.getProperty("MAVEN_UPLOAD_VERSION") // https://github.com/couchbase/couchbase-lite-java-listener/issues/18


}

task createMavenDirectory(type: Exec) {

    ext {
        uploadUser = System.getenv("MAVEN_UPLOAD_USERNAME") + ":" + System.getenv("MAVEN_UPLOAD_PASSWORD")
        mkcolPath  = System.getenv("MAVEN_UPLOAD_REPO_URL") + "com/couchbase/lite/couchbase-lite-java-listener/" + System.getenv("MAVEN_UPLOAD_VERSION") + "/"
    }
    commandLine "curl", "--user", uploadUser, "-X", "MKCOL", mkcolPath
}

// this hack is only needed for apache mod_dav based Maven repo's like file.couchbase.com.  otherwise, skip it
createMavenDirectory.onlyIf { System.getenv("MAVEN_UPLOAD_REPO_URL").contains("files") }

task uploadArchivesWrapper(dependsOn: createMavenDirectory) << {
    uploadArchives.execute()
}

uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: System.getProperty('MAVEN_UPLOAD_REPO_URL')) {
				authentication(userName: System.getProperty('MAVEN_UPLOAD_USERNAME'), password: System.getProperty('MAVEN_UPLOAD_PASSWORD'))
            }
            
            pom.project {
                licenses {
                    license {
                        name 'Couchbase Community Edition License Agreement'
                        url 'http://www.couchbase.com/agreement/community'
                        distribution 'repo'
                    }
                }
            }
        }
    }
}

task sourcesJar(type: Jar) { 
    classifier = 'sources'
    from sourceSets.main.java.srcDirs
}

artifacts { 
    archives sourcesJar
}
